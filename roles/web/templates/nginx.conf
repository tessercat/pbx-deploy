server {
    listen 80;
    listen [::]:80;
    server_name {{ peers_hostname }};
    location /.well-known {
        root {{ letsencrypt_webroot }};
    }
    return 301 https://{{ peers_hostname }}$request_uri;
}
upstream peers {
    server unix:/run/peers/socket fail_timeout=0;
}
server {
    listen localhost:{{ web_port }} default_server;
    server_name localhost;
    location /metrics {
        proxy_pass http://peers;
        proxy_set_header Host $host;
    }
}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ peers_hostname }};
    ssl_certificate /etc/letsencrypt/live/{{ hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ hostname }}/privkey.pem;
    location /static/ {
        root /opt/peers;
        gzip_static on;
    }
    location /register {
        proxy_pass http://peers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ~ /register_nchan/([a-f0-9-]+)$ {
        internal;
        nchan_subscriber;
        nchan_channel_id $1;
        nchan_channel_group peers;
    }
    location / {
        proxy_pass http://peers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
